import socket
import sys
import operator  # calculation
from multiprocessing import Process

ok_message = '\nHTTP/1.0 200 OK\n\n'
nok_message = '\nHTTP/1.0 404 NotFound\n\n'


def process_start(s_sock):
    print("Connected to a client.")
    s_sock.send(str.encode(
        'Welcome to the simple calculator! \n Insert the values of A and B and then the operation you want to make! \n Avalible Operations are \n - Addition "+" \n - Subtraction "-" \n - Multiply  "*" \n - Division "/" \n - Modulus "%" \n - Xor "^" \n '))
    while True:
        data = s_sock.recv(2048)  # input received from client
        data = data.decode("utf-8")

        # calculation
        try:
            no1, no2, operation = data.split(",")
            a, b = int(no1), int(no2)

            operations = {
                "+": ("Addition", operator.add),
                "-": ("Subtraction", operator.sub),
                "*": ("Multiply", operator.mul),
                "/": ("Division", operator.truediv),
                "%": ("Modulus",operator.mod),
                "^": ("Xor",operator.xor)
            }
            value = operations.get(operation)
            if value is not None:
                op, function = value
            else:
                function = None
                op = "ERROR"

            result = function(a, b)
            sendAnswer = f"{op}: {a}, {b} = {result}"
            print('Calculation successful!')
        except Exception:
            sendAnswer = 'Invalid input'


        if not data:
            break

        s_sock.send(sendAnswer.encode('utf-8'))
    s_sock.close()


if __name__ == '__main__':
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.bind(('192.168.56.103', 8888))  #change depending on which server 
    print("listening...")
    s.listen(28)  # AND THIS TOO

    try:
        while True:
            try:
                s_sock, s_addr = s.accept()
                p = Process(target=process_start, args=(s_sock,))
                p.start()

            except socket.error:

                print('got a socket error')

            except Exception as e:
                print("an exception occurred!")
                print(e)
                sys.exit(1)
    finally:
        s.close()
